// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net21_API_Labb3.Data;

#nullable disable

namespace Net21_API_Labb3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230329005229_Third8")]
    partial class Third8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Net21_API_Labb3.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interest_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.HasIndex("UserId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            Description = "Water Sport",
                            Interest_Name = "Swimming",
                            Website = "www.swimming.com, www.testing.com, www.swmg.net"
                        },
                        new
                        {
                            InterestId = 2,
                            Description = "Long Distance Marathons",
                            Interest_Name = "Running",
                            Website = "www.run.com, www.test.com"
                        },
                        new
                        {
                            InterestId = 3,
                            Description = "Pop Music",
                            Interest_Name = "Music",
                            Website = "www.music.com, www.choo.info"
                        });
                });

            modelBuilder.Entity("Net21_API_Labb3.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Name = "John Johns",
                            PhoneNumber = "075432213"
                        },
                        new
                        {
                            UserId = 2,
                            Name = "Tina Turner",
                            PhoneNumber = "075487094"
                        },
                        new
                        {
                            UserId = 3,
                            Name = "Jommy Choo",
                            PhoneNumber = "0721540956"
                        });
                });

            modelBuilder.Entity("Net21_API_Labb3.Models.Website", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("Net21_API_Labb3.Models.Interest", b =>
                {
                    b.HasOne("Net21_API_Labb3.Models.User", null)
                        .WithMany("Interests")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Net21_API_Labb3.Models.Website", b =>
                {
                    b.HasOne("Net21_API_Labb3.Models.Interest", "Interest")
                        .WithMany("Websites")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Net21_API_Labb3.Models.User", "User")
                        .WithMany("Websites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Net21_API_Labb3.Models.Interest", b =>
                {
                    b.Navigation("Websites");
                });

            modelBuilder.Entity("Net21_API_Labb3.Models.User", b =>
                {
                    b.Navigation("Interests");

                    b.Navigation("Websites");
                });
#pragma warning restore 612, 618
        }
    }
}
